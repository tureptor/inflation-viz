name: Deploy Frontend to S3 by Tag Lookup

on:
  push:
    paths:
      - 'frontend/**'
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Lookup S3 bucket by tag
      id: lookup_bucket
      env:
        AWS_REGION: eu-west-2
      run: |
        bucket_arn=$(aws resourcegroupstaggingapi get-resources \
          --tag-filters Key=Name,Values=inflation-viz-s3 \
          --resource-type-filters s3 \
          --query 'ResourceTagMappingList[0].ResourceARN' \
          --output text)

        if [ -z "$bucket_arn" ] || [ "$bucket_arn" == "None" ]; then
          echo "No S3 bucket found with specified tag"
          exit 1
        fi

        bucket_name=${bucket_arn#arn:aws:s3:::}
        echo "bucket_name=$bucket_name" >> $GITHUB_OUTPUT

    - name: Lookup CloudFront distribution by tag
      id: lookup_distribution
      run: |
        dist_arn=$(aws resourcegroupstaggingapi get-resources \
          --region us-east-1 \
          --tag-filters Key=Name,Values=inflation-viz-cloudfront-distribution \
          --query 'ResourceTagMappingList[0].ResourceARN' \
          --output text)

        if [ -z "$dist_arn" ] || [ "$dist_arn" == "None" ]; then
          echo "No CloudFront distribution found with specified tag"
          exit 1
        fi

        distribution_id=${dist_arn##*/}
        echo "distribution_id=$distribution_id" >> $GITHUB_OUTPUT

    - name: Sync frontend to S3 bucket
      env:
        BUCKET_NAME: ${{ steps.lookup_bucket.outputs.bucket_name }}
      run: |
        aws s3 sync frontend/ s3://$BUCKET_NAME/

    - name: Invalidate all CloudFront cache
      env:
        DISTRIBUTION_ID: ${{ steps.lookup_distribution.outputs.distribution_id }}
      run: |
        aws cloudfront create-invalidation \
          --region us-east-1 \
          --distribution-id "$DISTRIBUTION_ID" \
          --paths "/*"